# -----------------------------------------------------------------------------
# ------------------------------ BEGINNER LEVEL -------------------------------   
# -----------------------------------------------------------------------------

# Ниже приведен набор баллов, которые студенты получили в прошлом семестре. Напишите код, чтобы определить, сколько из них равны 90 или выше, и присвоить это значение переменной a_scores.

scores = "67 80 90 78 93 20 79 89 96 97 92 88 79 68 58 90 98 100 79 74 83 88 80 86 85 70 90 100"

a_scores = 0
for score in scores.split():
    if int(score) >= 90:
        a_scores += 1

print(a_scores)
# ============================================================================
# ============================================================================
# Напишите код, который использует строку, хранящуюся в org, и создает аббревиатуру, которая присваивается переменной acro. Должна использоваться только первая буква каждого слова, каждая буква в аббревиатуре должна быть заглавной буквой, и между буквами аббревиатуры не должно быть ничего. Слова, которые не должны включаться в аббревиатуру, хранятся в списке stopwords. Например, если org было присвоено строке «hello to world», то полученная аббревиатура должна быть «HW».


stopwords = ['to', 'a', 'for', 'by', 'an', 'am', 'the', 'so', 'it', 'and', "The"]
org = "The organization for health, safety, and education"

acro = ''
for word in org.split():
    if word not in stopwords:
        acro += word[0].upper()

print(acro)

# ============================================================================
# ============================================================================
# Напишите код, который использует строку, хранящуюся в sent, и создает аббревиатуру, которая присваивается переменной acro. Должны использоваться первые две буквы каждого слова, каждая буква в аббревиатуре должна быть заглавной буквой, и каждый элемент аббревиатуры должен разделяться «. » (точка и пробел). Слова, которые не должны включаться в аббревиатуру, хранятся в списке stopwords. Например, если sent было присвоено строке «height and ewok wonder», то полученная аббревиатура должна быть «HE. EW. WO».

stopwords = ['to', 'a', 'for', 'by', 'an', 'am', 'the', 'so', 'it', 'and', 'The']
sent = "The water earth and air are vital"

acro = ''
for word in sent.split():
    if word not in stopwords:
        acro += word[:2].upper() + '. '

acro = acro[:-2]
print(acro)
# ============================================================================
# ============================================================================
# Палиндром - это фраза, которая, если перевернуть, будет читаться точно так же. Напишите код, который проверяет, является ли p_phrase палиндромом, переворачивая его, а затем проверяя, равен ли перевернутый вариант оригиналу. Присвойте переменной r_phrase перевернутую версию p_phrase, чтобы мы могли проверить вашу работу.

p_phrase = "was it a car or a cat I saw"

r_phrase = p_phrase[::-1]
print(r_phrase)
# ============================================================================
# ============================================================================
# Предоставлен список данных о запасах магазина, где каждый элемент в списке представляет собой название товара, сколько их в наличии и сколько они стоят. Выведите каждый элемент списка с тем же форматированием, используя метод .format (не конкатенацию строк). Например, первое утверждение о печати должно гласить: «В магазине есть 12 пар обуви, каждая стоит 29,99 доллара США».

inventory = ["shoes, 12, 29.99", "shirts, 20, 9.99", "sweatpants, 25, 15.00", "scarves, 13, 7.75"]

for item in inventory:
    name, count, price = item.split(', ')
    print('The store has {} {}, each for {} USD.'.format(count, name, price))
# ============================================================================
# ============================================================================


# -----------------------------------------------------------------------------
# ----------------------------- INTERMEDIATE LEVEL ----------------------------  
# -----------------------------------------------------------------------------
